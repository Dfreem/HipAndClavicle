@model Product

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link rel="stylesheet" href="~/css/Product.css" />
<div class="card">

    @*<a  data-bs-toggle="offcanvas" href="#offcanvas-edit-product" role="button" aria-controls="offcanvas-edit-product"><i class="bi bi-pencil"></i></a>*@
    <div class="hide-card">
        @if (Model.ProductImage is not null)
        {
            <img class="card-img-top" width="@Model.ProductImage.Width" src="data:image;base64,@Convert.ToBase64String(Model.ProductImage.ImageData)" alt="Product Image">
        }
        else
        {

            <img src="~/images/butterflys.png" class="card-img-top" />
        }

    </div>
    <div class="card-body">
        <div class="card-title d-flex flex-row">
            <h5>@Model.Name</h5>
        </div>

        @*TODO set tooltip for color viewer.*@

        <div class="card-text">
            @Model.Description
        </div>

        <div class="btn-group-vertical product-options">
            <a class="btn btn-outline-primary btn-group-item bi bi-pencil" asp-action="EditProduct" asp-controller="Product" asp-route-productId="@Model.ProductId">
            </a>
            <a class="btn btn-outline-danger btn-group-item mt-1 bi bi-x" asp-action="DeleteProduct"asp-controller="Product" asp-route-productId="@Model.ProductId"></a>

        </div>

        <script>
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

        </script>
        <ul class="color-viewer">
            @foreach (Color color in Model.AvailableColors)
            {
                <li class="color-splotch" style="background-color:@color.HexValue;">
                </li>
            }
        </ul>
        <p class="color-label"><small>available colors</small></p>
    </div>

</div>