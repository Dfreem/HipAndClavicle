@model ProductVM

<link rel="stylesheet" href="./css/Product.css" />
<div class="body">
    <h4>@Model.Name</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <div class="container">
                <div class="card">
                    @if (Model.Edit is not null && Model.Edit.ProductImage is not null)
                    {
                        <img class="card-img-top" src="data:image;base64,@Convert.ToBase64String(Model.Edit.ProductImage.ImageData)" alt="Product Image">

                    }
                </div>
                <div class="card-text">
                    @Model.Edit?.Description
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <form asp-action="EditProduct" method="post">

                <input type="hidden" asp-for="Edit!.ProductId" value="@Model.Edit!.ProductId" />
                <div class="form-group">
                    <label asp-for="Name">Product Name</label>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Category, new SelectList(Enum.GetValues(typeof(ProductCategory))), "-- Select Category --", new { @class = "form-control category-select" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.QuantityOnHand, new { @class = "control-label" })
                    @Html.EditorFor(model => model.QuantityOnHand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantityOnHand, "", new { @class = "text-danger" })
                </div>


                <a asp-action="DeleteProductAsync" class="btn btn-outline-danger">Delete</a>

                <div class="form-group">
                    @Html.LabelFor(model => model.SetSizes, new { @class = "control-label" })
                    @for (int i = 0; i < Model.SetSizes.Count; i++)
                    {
                        @Html.EditorFor(model => model.SetSizes[i], new { htmlAttributes = new { @class = "form-control" } })
                    }
                    @Html.ValidationMessageFor(model => model.SetSizes, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductImage, new { @class = "control-label" })
                    <input type="file" asp-for="Edit!.TempFile" />
                    
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Edit!.Description, new { @class = "control-label" })
                    <textarea cols="6" rows="2" asp-for="Edit!.Description"></textarea>
                    @Html.ValidationMessageFor(model => model.Edit!.Description, "", new { @class = "text-danger" })
                </div>


                <input type="submit" value="Save" class="btn btn-success" />

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductColors, new { @class = "control-label" })
                    <select class="form-select color-viewer" asp-for="ProductColors">
                        @foreach (Color color in Model.NamedColors)
                        {
                            <option value="@color.ColorId" class="color-select-item">
                                @color.ColorName
                            </option>
                        }
                    </select>

                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Products" asp-controller="Admin">Back to List</a>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
